{"version":3,"file":"net.min.js","sources":["../../.gobble-build/01-source/net.js"],"sourcesContent":["'use strict';\n\nlet net = {},\n    win = window,\n    contentTypeHandlers = {},\n    contentTypes = {},\n    getXhr;\n\nconst responseTypes = {\n  'arraybuffer': true,\n  'blob':        true,\n  'document':    true,\n  'text':        true\n};\n\nconst nativeTypes = {\n  '[object ArrayBuffer]': true,\n  '[object Blob]': true,\n  '[object File]': true\n};\n\nconst statusTypes = [null, 'info', 'success', 'redirect', 'clientError', 'serverError'];\n\nconst lineEndReg = /\\r?\\n/;\n\nfunction isObject(obj) { return Object.prototype.toString.call(obj) === '[object Object]'; }\nfunction isNativeType(obj) {\n  return nativeTypes[Object.prototype.toString.call(obj)];\n}\nfunction defineReader(obj, prop, value) {\n  Object.defineProperty(obj, prop, { writable: false, value: value });\n}\n\nnet.Promise = ('Promise' in win) ? win.Promise : null;\nnet.defaultOptions = {\n  async: true,\n  type: 'urlencoded'\n};\n\nnet.serializeObject = function(obj) {\n  if (!isObject(obj)) return obj;\n\n  let pairs = [];\n  for (let key in obj) {\n    let value = (obj[key] == void 0) ? true : obj[key];\n    pairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Add custom contentType handler\n *\n *     net.setHandler('urlencoded', {\n *       contentTypes: ['application/x-www-form-urlencoded'],\n *       getter: QueryString.parse,\n *       setter: QueryString.stringify\n *     });\n *\n *     net.setHandler('text', 'text/plain');\n *\n *     net.setHandler({\n *       name: 'text',\n *       getter: String.prototype.trim\n *     });\n */\nnet.setHandler = function(name, options) {\n  var opts = {}\n\n  if (typeof(options) == 'string') {\n    opts.contentTypes = [options];\n  } else if(Array.isArray(options)) {\n    opts.contentTypes = options;\n  }\n\n  if (isObject(name)) {\n    Object.assign(opts, name);\n  } else {\n    opts.name = name;\n    Object.assign(opts, options);\n  }\n\n  opts.contentTypes.forEach(ct => { contentTypes[ct] = name; })\n\n  contentTypeHandlers[name] = opts;\n\n  return name;\n};\n\nnet.setHandler('html', 'text/html');\nnet.setHandler('urlencoded', {\n  contentTypes: ['application/x-www-form-urlencoded'],\n  setter: net.serializeObject\n});\n\nnet.setHandler('json', {\n  contentTypes: ['application/json'],\n  getter: JSON.parse, // IE 10-11 does not supports responseType JSON\n  setter: JSON.stringify\n});\n\n/**\n * Response object\n */\nfunction Response(xhr, request) {\n  let status       = xhr.status,\n      contentType  = xhr.getResponseHeader('Content-Type'),\n      responseText = xhr.responseText,\n      i = statusTypes.length, type, self = this;\n\n  // IE9 fix http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) status = 204;\n\n  contentType = (contentType || '').split(';')[0];\n\n  // Inject origins\n  this.xhr     = xhr;\n  this.request = request;\n\n  // Set status props\n  defineReader(self, 'status', status);\n  defineReader(self, 'statusType', statusTypes[status / 100 | 0]);\n  defineReader(self, 'statusText', xhr.statusText);\n\n  while (type=statusTypes[--i]) defineReader(this, type, type == this.statusType);\n\n  defineReader(self, 'error', this.clientError || this.serverError);\n\n  // Set headers props\n  self._parseHeaders(xhr.getAllResponseHeaders());\n\n  defineReader(self, 'contentType', contentType);\n  defineReader(self, 'type', request.options.responseType || contentTypes[contentType]);\n\n  // Set body props\n  defineReader(self, 'text', responseText);\n\n  if (xhr.responseType != '' && responseTypes[xhr.responseType]) {\n    // TODO: XML response\n    defineReader(self, xhr.responseType, xhr.response);\n    defineReader(self, 'body', xhr.response);\n  } else self._parseResponseBody();\n}\n\nResponse.prototype = {\n  getHeader: function(key) {\n    return this._headers[key.toLowerCase()];\n  },\n\n  _parseHeaders: function(data) {\n    let headers  = data.split(lineEndReg),\n        result   = {},\n        downcase = {},\n        l = headers.length - 1,\n        i = 0;\n\n    headers.pop();\n\n    while(i < l) {\n      let header = headers[i++],\n          parts  = header.split(':'),\n          key    = parts.shift(),\n          value  = parts.join(':').trim();\n\n      result[key] = value;\n      downcase[key.toLowerCase()] = value;\n    }\n\n    defineReader(this, 'headers', result);\n    defineReader(this, '_headers', downcase);\n  },\n\n  _parseResponseBody: function() {\n    let type    = this.type,\n        handler = contentTypeHandlers[type],\n        body    = this.text;\n\n    if (type && handler && handler.getter) {\n      try {\n        body = handler.getter.call(body, body);\n        defineReader(this, type, body);\n      } catch(e) {}\n    }\n\n    defineReader(this, 'body', body);\n  }\n};\n\nfunction Request(method, url, options) {\n  this.method  = method.toUpperCase();\n  this.path    = url;\n  this.data    = {};\n  this.form    = null;\n  this.options = Object.create(net.defaultOptions);\n  this.headers = {};\n  this.urlParams = {};\n  this.urlData = {};\n\n  if (~url.indexOf('{')) {\n    url.replace(/{(\\w+)}/g, (p1, p2) => { this.urlParams[p2] = p1 });\n  }\n}\n\nRequest.prototype = {\n  set: function(key, value) {\n    if (value === void 0) {\n      if (isObject(key)) {\n        for (let k in key) {\n          if (k in this.urlParams) {\n            this.urlData[k] = key[k];\n          } else {\n            this.data[k] = key[k];\n          }\n        }\n      } else this.form = key;\n    } else {\n      if (isNativeType(value)) this.form = this.form || new FormData();\n\n      if (key in this.urlParams) {\n        this.urlData[key] = value;\n      } else this.data[key] = value;\n    }\n\n    return this;\n  },\n\n  setHeader: function(key, value) {\n    if (value === void 0 && isObject(key)) {\n      Object.assign(this.headers, key);\n    } else this.headers[key] = value;\n\n    return this;\n  },\n\n  setOption: function(opt, val) {\n    this.options[opt] = val;\n    return this;\n  },\n\n  async: function(val) {\n    return this.setOption('async', val);\n  },\n\n  timeout: function(val) {\n    return this.setOption('timeout', val);\n  },\n\n  type: function(val) {\n    return this.setOption('type', val);\n  },\n\n  expect: function(val) {\n    return this.setOption('responseType', val);\n  },\n\n  send: function() {\n    let xhr = new win.XMLHttpRequest(),\n        self = this,\n        type = self.options.type,\n        url  = self.path,\n        responseType = self.options.responseType,\n        handler = contentTypeHandlers[type],\n        headers = Object.create(self.headers),\n        data;\n\n    for (let key in self.urlParams) {\n      url = url.replace(self.urlParams[key], self.urlData[key]);\n    }\n\n    // Content type '**/**'\n    if (~type.indexOf('/')) headers['Content-Type'] = type;\n\n    if (Object.keys(self.data).length > 0 || self.form) {\n      if (self.method === 'GET') { // No body\n        data = null;\n        let query = net.serializeObject(self.data);\n        if (query !== '') url += ~url.indexOf('?') ? '&' + query : '?' + query;\n      } else if (self.form) {\n        data = self.form;\n        if (data instanceof FormData) {\n          for (let key in self.data) data.append(key, data);\n        }\n      } else if (handler && handler.setter) {\n        data = handler.setter.call(self.data, self.data);\n      } else data = self.data;\n\n      if (handler && !('Content-Type' in headers)) headers['Content-Type'] = handler.contentTypes[0];\n    }\n\n    xhr.open(self.method, url, self.options.async);\n\n    if (responseType && responseTypes[responseType]) {\n      xhr.responseType = responseType;\n    }\n\n    for (let header in headers) {\n      xhr.setRequestHeader(header, headers[header]);\n    }\n\n    return new net.Promise(function(resolve, reject) {\n      xhr.addEventListener('load', function() {\n        let response = new Response(xhr, self);\n\n        resolve(response);\n      });\n\n      xhr.addEventListener('error', ()=>{ reject(xhr) });\n\n      if (self.options.timeout) {\n        xhr.timeout = self.options.timeout;\n\n        xhr.addEventListener('timeout', ()=>{ reject(xhr) });\n      }\n\n      xhr.send(data);\n    });\n  }\n};\n\nnet.Request  = Request;\nnet.Response = Response;\n\nexport default net;\n"],"names":["isObject","obj","Object","prototype","toString","call","isNativeType","nativeTypes","defineReader","prop","value","defineProperty","writable","Response","xhr","request","status","contentType","getResponseHeader","responseText","i","statusTypes","length","type","undefined","self","this","split","statusText","statusType","clientError","serverError","_parseHeaders","getAllResponseHeaders","options","responseType","contentTypes","responseTypes","response","_parseResponseBody","Request","method","url","toUpperCase","path","data","form","create","net","defaultOptions","headers","urlParams","urlData","indexOf","replace","p1","p2","_this","win","window","contentTypeHandlers","arraybuffer","blob","document","text","[object ArrayBuffer]","[object Blob]","[object File]","lineEndReg","Promise","async","serializeObject","pairs","key","push","encodeURIComponent","join","setHandler","name","opts","Array","isArray","assign","forEach","ct","setter","getter","JSON","parse","stringify","getHeader","_headers","toLowerCase","result","downcase","l","pop","header","parts","shift","trim","handler","body","e","set","k","FormData","setHeader","setOption","opt","val","timeout","expect","send","XMLHttpRequest","keys","query","append","open","setRequestHeader","resolve","reject","addEventListener"],"mappings":"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"}