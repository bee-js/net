{"version":3,"file":"net.min.js","sources":["../../.gobble-build/01-source/net.js"],"sourcesContent":["'use strict';\n\nlet net = {},\n    win = window,\n    contentTypeHandlers = {},\n    contentTypes = {},\n    getXhr;\n\nconst responseTypes = {\n  'arraybuffer': true,\n  'blob':        true,\n  'document':    true,\n  'text':        true\n}\n\nconst statusTypes = [null, 'info', 'success', 'redirect', 'clientError', 'serverError'];\n\nconst lineEndReg = /\\r?\\n/;\n\nfunction isObject(obj) { return obj === Object(obj); }\n\nnet.Promise = ('Promise' in win) ? win.Promise : null;\nnet.defaultOptions = {\n  async: true,\n  type: 'urlencoded'\n};\n\nnet.serializeObject = function(obj) {\n  if (!isObject(obj)) return obj;\n\n  let pairs = [];\n  for (let key in obj) {\n    let value = (obj[key] == void 0) ? true : obj[key];\n    pairs.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Add custom contentType handler\n *\n *     net.setHandler('application/x-www-form-urlencoded', {\n *       name: 'urlencoded',\n *       getter: QueryString.parse,\n *       setter: QueryString.stringify\n *     });\n *\n *     net.setHandler('text/plain', 'text');\n *\n *     net.setHandler({\n *       name: 'text',\n *       getter: String.prototype.trim\n *     });\n */\nnet.setHandler = function(name, options) {\n  var opts = {}\n\n  if (typeof(options) == 'string') {\n    opts.contentTypes = [options];\n  } else if(Array.isArray(options)) {\n    opts.contentTypes = options;\n  }\n\n  if (isObject(name)) {\n    Object.assign(opts, name);\n  } else {\n    opts.name = name;\n    Object.assign(opts, options);\n  }\n\n  opts.contentTypes.forEach(ct => { contentTypes[ct] = name; })\n\n  contentTypeHandlers[name] = opts;\n\n  return name;\n};\n\nnet.setHandler('html', 'text/html');\nnet.setHandler('urlencoded', {\n  contentTypes: ['application/x-www-form-urlencoded'],\n  setter: net.serializeObject\n});\n\nnet.setHandler('json', {\n  contentTypes: ['application/json'],\n  getter: JSON.parse, // IE 10-11 does not supports responseType JSON\n  setter: JSON.stringify\n});\n\n/**\n * Response object\n */\nfunction Response(xhr, request) {\n  let status       = xhr.status,\n      contentType  = xhr.getResponseHeader('Content-Type'),\n      responseText = xhr.responseText;\n\n  // IE9 fix http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) status = 204;\n\n  contentType = (contentType || '').split(';')[0];\n\n  // Create stubs for responses\n  this.info        = false;\n  this.success     = false;\n  this.redirect    = false;\n  this.clientError = false;\n  this.serverError = false;\n\n  // Inject origins\n  this.xhr     = xhr;\n  this.request = request;\n\n  // Set status props\n  this.status     = status;\n  this.statusType = statusTypes[status / 100 | 0];\n  this.statusText = xhr.statusText;\n  this[this.statusType] = true;\n\n  this.error = this.clientError || this.serverError;\n\n  // Set headers props\n  this._parseHeaders(xhr.getAllResponseHeaders());\n  this.contentType = contentType;\n  this.type = contentTypes[contentType];\n\n  // Set body props\n  this.text = responseText;\n\n  if (xhr.responseType != '' && responseTypes[xhr.responseType]) {\n    this[xhr.responseType] = this.body = xhr.response; // TODO: XML response\n  } else this._parseResponseBody();\n}\n\nResponse.prototype = {\n  getHeader: function(key) {\n    return this._headers[key.toLowerCase()];\n  },\n\n  _parseHeaders: function(data) {\n    let headers  = data.split(lineEndReg),\n        result   = {},\n        downcase = {},\n        l = headers.length - 1,\n        i = 0;\n\n    headers.pop();\n\n    while(i < l) {\n      let header = headers[i++],\n          parts  = header.split(':'),\n          key    = parts.shift(),\n          value  = parts.join(':').trim();\n\n      result[key] = value;\n      downcase[key.toLowerCase()] = value;\n    }\n\n    this.headers  = result;\n    this._headers = downcase;\n  },\n\n  _parseResponseBody: function() {\n    let type    = contentTypes[this.contentType],\n        handler = contentTypeHandlers[this.type],\n        body    = this.text;\n\n    if (type && handler && handler.getter) {\n      try {\n        this[type] = this.body = handler.getter.call(body, body);\n      } catch(e) {\n        this.body = body;\n      }\n    } else {\n      this.body = body;\n    }\n  }\n};\n\nfunction Request(type, url, options) {\n  this.method  = type.toUpperCase();\n  this.path    = url;\n  this.data    = {};\n  this.form    = null;\n  this.options = Object.create(net.defaultOptions);\n  this.headers = {};\n}\n\nRequest.prototype = {\n  set: function(key, value) {\n    if (key instanceof FormData) { // TODO: File, Blob, ArrayBuffer\n      this.form = key;\n    } else if (value === void 0) {\n      if (isObject(key)) {\n        Object.assign(this.data, key);\n      } else this.data[key] = true;\n    } else this.data[key] = value;\n\n    return this;\n  },\n\n  setHeader: function(key, value) {\n    if (value === void 0 && isObject(key)) {\n      Object.assign(this.headers, key);\n    } else this.headers[key] = value;\n\n    return this;\n  },\n\n  setOption: function(opt, val) {\n    this.options[opt] = val;\n    return this;\n  },\n\n  async: function(val) {\n    return this.setOption('async', val);\n  },\n\n  timeout: function(val) {\n    return this.setOption('timeout', val);\n  },\n\n  type: function(val) {\n    return this.setOption('type', val);\n  },\n\n  send: function() {\n    let xhr = new win.XMLHttpRequest(),\n        self = this,\n        type = self.options.type,\n        url  = self.path,\n        responseType = self.options.responseType,\n        handler = contentTypeHandlers[type],\n        headers = Object.create(self.headers),\n        data;\n\n    if (Object.keys(self.data).length > 0 || self.form) {\n      if (self.method === 'GET') {\n        data = null;\n        let query = net.serializeObject(self.data);\n        if (query !== '') url += ~url.indexOf('?') ? '&' + query : '?' + query;\n      } else if (self.form) {\n        data = self.form;\n        for (let key in self.data) data.append(key, data);\n      } else if (handler && handler.setter) {\n        data = handler.setter.call(self.data, self.data);\n        if (!('Content-Type' in headers)) headers['Content-Type'] = handler.contentTypes[0];\n      } else data = self.data;\n    }\n\n    xhr.open(self.method, url, self.options.async);\n\n    if (responseType && responseTypes[responseType]) {\n      xhr.responseType = responseType;\n    }\n\n    for (let header in headers) {\n      xhr.setRequestHeader(header, headers[header]);\n    }\n\n    return new net.Promise(function(resolve, reject) {\n      xhr.addEventListener('load', function() {\n        let response = new Response(xhr, self);\n\n        resolve(response);\n      });\n\n      xhr.addEventListener('error', ()=>{ reject(xhr) });\n\n      if (self.options.timeout) {\n        xhr.timeout = self.options.timeout;\n\n        xhr.addEventListener('timeout', ()=>{ reject(xhr) });\n      }\n\n      xhr.send(data);\n    });\n  }\n};\n\nnet.Request  = Request;\nnet.Response = Response;\n\nexport default net;\n"],"names":["isObject","obj","Object","Response","xhr","request","status","contentType","getResponseHeader","responseText","split","this","info","success","redirect","clientError","serverError","statusType","statusTypes","statusText","error","_parseHeaders","getAllResponseHeaders","type","contentTypes","text","responseType","responseTypes","body","response","_parseResponseBody","Request","url","options","method","toUpperCase","path","data","form","create","net","defaultOptions","headers","win","window","contentTypeHandlers","arraybuffer","blob","document","lineEndReg","Promise","async","serializeObject","pairs","key","value","push","encodeURIComponent","join","setHandler","name","opts","Array","isArray","assign","forEach","ct","setter","getter","JSON","parse","stringify","prototype","getHeader","_headers","toLowerCase","result","downcase","l","length","i","pop","header","parts","shift","trim","handler","call","e","set","FormData","setHeader","setOption","opt","val","timeout","send","XMLHttpRequest","self","undefined","keys","query","indexOf","append","open","setRequestHeader","resolve","reject","addEventListener"],"mappings":"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"}